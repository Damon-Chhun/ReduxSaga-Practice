[{"/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/index.js":"1","/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/reportWebVitals.js":"2","/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/App.js":"3","/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/redux/store.js":"4","/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/redux/root-reducer.js":"5","/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/redux/card/card.reducer.js":"6","/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/redux/card/cardActionTypes.js":"7","/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/components/card/Card.component.jsx":"8"},{"size":578,"mtime":1607885352261,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607544781392,"results":"11","hashOfConfig":"10"},{"size":188,"mtime":1607886313676,"results":"12","hashOfConfig":"10"},{"size":335,"mtime":1607884743550,"results":"13","hashOfConfig":"10"},{"size":181,"mtime":1607885247718,"results":"14","hashOfConfig":"10"},{"size":492,"mtime":1607885243005,"results":"15","hashOfConfig":"10"},{"size":87,"mtime":1607885452437,"results":"16","hashOfConfig":"10"},{"size":168,"mtime":1607886483268,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3q6ngr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/index.js",[],["36","37"],"/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/reportWebVitals.js",[],"/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/App.js",[],"/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/redux/store.js",[],"/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/redux/root-reducer.js",[],"/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/redux/card/card.reducer.js",["38"],"import { cardActionTypes } from \"./cardActionTypes\";\n\nconst INITIAL_STATE = {\n  count: 0\n};\n\nconst cardReducer = (state = INITIAL_STATE, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case cardActionTypes.increment:\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    case cardActionTypes.decrement:\n      return {\n        ...state,\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cardReducer;\n","/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/redux/card/cardActionTypes.js",[],"/Users/Damon/Desktop/github/ReduxSaga-Practice/reduxsagas-practice/src/components/card/Card.component.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":8,"column":17,"nodeType":"45","messageId":"46","endLine":8,"endColumn":24},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'payload' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]